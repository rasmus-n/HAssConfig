- alias: Welcome
####################
  trigger:
    platform: state
    entity_id: group.personal_devices
    to: "home"
  condition:
    - condition: state
      entity_id: input_boolean.daylight
      state: 'off'
    - condition: state
      entity_id: input_boolean.in_bed
      state: 'off'
  action:
    - service: scene.turn_on
      entity_id: scene.basic_light

- alias: Welcome 2
####################
  trigger:
    platform: state
    entity_id: group.personal_devices
    to: "home"
  action:
    - service: switch.turn_off
      entity_id: switch.garden_air

- alias: Welcome 3
####################
  trigger:
    platform: state
    entity_id: group.personal_devices
    to: "home"
  condition:
    - condition: state
      entity_id: input_boolean.after_dark
      state: 'on'
    - condition: state
      entity_id: input_boolean.in_bed
      state: 'off'
  action:
    - service: scene.turn_on
      entity_id: scene.light_after_dark

- alias: Goodbye
####################
  trigger:
    platform: state         
    entity_id: group.personal_devices
    to: "not_home"
  action:
    - service: scene.turn_on
      entity_id: scene.all_off

- alias: Low light
####################
  trigger:
    platform: state
    entity_id: input_boolean.daylight
    to: 'off'
    for:
      minutes: 2
  condition:
    - condition: state
      entity_id: group.personal_devices
      state: "home"
    - condition: state
      entity_id: input_boolean.in_bed
      state: 'off'
  action:
    - service: scene.turn_on
      entity_id: scene.basic_light

- alias: No light
####################
  trigger:
    platform: state
    entity_id: input_boolean.after_dark
    to: 'on'
    for:
      minutes: 2
  condition:
    - condition: state
      entity_id: group.personal_devices
      state: "home"
    - condition: state
      entity_id: input_boolean.in_bed
      state: 'off'
  action:
    - service: scene.turn_on
      entity_id: scene.light_after_dark

- alias: Daylight
####################
  trigger:
    platform: state
    entity_id: input_boolean.daylight
    to: 'on'
    for:
      minutes: 2
  action:
    service: light.turn_off

- alias: Daylight on
####################
  trigger:
    platform: numeric_state
    entity_id: sensor.light_level
    above: 50

  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.daylight
  
- alias: Daylight off
####################
  trigger:
    platform: numeric_state
    entity_id: sensor.light_level
    below: 30

  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.daylight
    
- alias: Daylight init
####################
  trigger:
    platform: state
    entity_id: sensor.light_level
    
  condition:
    condition: numeric_state
    entity_id: sensor.light_level
    above: 50
    
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.daylight
    - service: automation.turn_off
      entity_id: automation.daylight_init

- alias: After dark on
####################
  trigger:
    platform: numeric_state
    entity_id: sensor.light_level
    below: 15

  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.after_dark
  
- alias: After dark off
####################
  trigger:
    platform: numeric_state
    entity_id: sensor.light_level
    above: 30

  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.after_dark
    
- alias: After dark init
####################
  trigger:
    platform: state
    entity_id: sensor.light_level
    
  condition:
    condition: numeric_state
    entity_id: sensor.light_level
    below: 15
    
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.after_dark
    - service: automation.turn_off
      entity_id: automation.after_dark_init

- alias: Pause music for TV
####################
  trigger:
    platform: state
    entity_id: media_player.Lund265
    to: "playing"
  condition:
    condition: state
    entity_id: media_player.MPD
    state: "playing"
  action:
    service: media_player.media_pause
    entity_id: media_player.MPD

- alias: morning_preset
####################
  trigger:
    platform: state
    entity_id: input_select.transport
  action:
    - service: input_slider.select_value
      data_template:
        entity_id: input_slider.light_on_hour
        value: '{% if is_state("input_select.transport", "Car") %} {{5|float}} {% elif is_state("input_select.transport", "Bike") %} {{5|float}} {% endif %}'
    - service: input_slider.select_value
      data_template:
        entity_id: input_slider.light_on_minute
        value: '{% if is_state("input_select.transport", "Car") %} {{40|float}} {% elif is_state("input_select.transport", "Bike") %} {{40|float}} {% endif %}'
    - service: input_slider.select_value
      data_template:
        entity_id: input_slider.radio_on_hour
        value: '{% if is_state("input_select.transport", "Car") %} {{5|float}} {% elif is_state("input_select.transport", "Bike") %} {{5|float}} {% endif %}'
    - service: input_slider.select_value
      data_template:
        entity_id: input_slider.radio_on_minute
        value: '{% if is_state("input_select.transport", "Car") %} {{55|float}} {% elif is_state("input_select.transport", "Bike") %} {{50|float}} {% endif %}'

- alias: auto_light_on
####################
  trigger:
    platform: template
    value_template: '{{ states.sensor.time.state == states.sensor.light_on_time.state }}'
  condition:
    condition: state
    entity_id: input_boolean.daylight
    state: 'off'
  action:
    - service: scene.turn_on
      entity_id: scene.morning_1

- alias: auto_radio_on
####################
  trigger:
    platform: template
    value_template: '{{ states.sensor.time.state == states.sensor.radio_on_time.state }}'
  action:
    - service: media_player.clear_playlist
      data:
        entity_id: media_player.MPD
    - service: media_player.play_media
      data:
        entity_id: media_player.MPD
        media_content_type: playlist
        media_content_id: P7
    - service: media_player.volume_set
      data:
        entity_id: media_player.MPD
        volume_level: 0.07

- alias: morning_preset_weekday
####################
  trigger:
    platform: time
    hours: 12
    minutes: 0
    seconds: 0
  condition:
    condition: time
    weekday:
      - sun
  action:
   - service: homeassistant.turn_on
     entity_id: group.morning
   - service: input_select.select_option
     data:
       entity_id: input_select.transport
       option: "Bike"

- alias: morning_preset_weekend
####################
  trigger:
    platform: time
    hours: 12
    minutes: 0
    seconds: 0
  condition:
    condition: time
    weekday:
      - fri
  action:
   - service: homeassistant.turn_off
     entity_id: group.morning

- alias: motion
####################
  trigger:
    platform: mqtt
    topic: "motion/test"
    payload: "1"
  action:
   service: device_tracker.see
   data:
     dev_id: motion


- alias: temp
####################
  trigger:
    platform: state
    entity_id: sensor.aarhus_temperature
  action:
    service: mqtt.publish
    data_template:
      topic: "outdoor/temperature"
      payload_template: '{{ states.sensor.aarhus_temperature.state | round(0) }}'
      retain: "true"

- alias: In bed
####################
  trigger:
    - platform: numeric_state
      entity_id: sensor.bed_sensor_value
      below: 345
      for:
        seconds: 3
        
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.in_bed

- alias: Out of bed
####################
  trigger:
    - platform: numeric_state
      entity_id: sensor.bed_sensor_value
      above: 350
      for:
        seconds: 3
    
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.in_bed

- alias: Goodnight
####################
  trigger:
    platform: state
    entity_id: input_boolean.in_bed
    from: 'off'
    to: 'on'
    for:
      minutes: 1
      
  action:
    service: script.turn_on
    entity_id: script.goodnight


- alias: Goodnight light
####################
  trigger:
    platform: state
    entity_id: input_boolean.in_bed
    from: 'off'
    to: 'on'
    for:
      minutes: 1
    
  condition:
    - condition: state
      entity_id: light.mood
      state: 'on'
      
  action:
    service: script.turn_on
    entity_id: script.goodnight_light

- alias: Lights on
####################
  trigger:
    platform: mqtt
    topic: "buttons/button_1/hold"
  condition:
    - condition: template
      value_template: '{{ trigger.payload | round(0) > 30 }}'
  action:
    service: scene.turn_on
    entity_id: scene.full_light

- alias: Lights off
####################
  trigger:
    platform: mqtt
    topic: "buttons/button_1/repeat"
  condition:
    - condition: template
      value_template: '{{ trigger.payload | round(0) == 2 }}'
  action:
    service: scene.turn_on
    entity_id: scene.all_off

- alias: Desk light
####################
  trigger:
    platform: mqtt
    topic: "buttons/button_2/hold"
  condition:
    - condition: template
      value_template: '{{ trigger.payload | round(0) < 30 }}'
  action:
    service: light.toggle
    entity_id: light.desk

- alias: Castrol light
####################
  trigger:
    platform: mqtt
    topic: "buttons/button_3/hold"
  condition:
    - condition: template
      value_template: '{{ trigger.payload | round(0) < 30 }}'
  action:
    service: light.toggle
    entity_id: light.castrol


- alias: Random
####################
  trigger:
    platform: mqtt
    topic: "buttons/button_5/repeat"
  condition:
    - condition: template
      value_template: '{{ trigger.payload | round(0) == 3 }}'
  action:
    service: light.turn_on
    data:
      entity_id: light.mood
      effect: Random
    

- alias: Red alert
####################
  trigger:
    platform: mqtt
    topic: "buttons/button_5/repeat"
  condition:
    - condition: template
      value_template: '{{ trigger.payload | round(0) == 2 }}'
  action:
    service: scene.turn_on
    entity_id: scene.red_alert


- alias: Irrigation
####################
  trigger:
    platform: time
    hours: '/4'
    minutes: 0
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: time
        after: "10:00:00"
        before: "20:00:00"
      - condition: template
        value_template: '{{ states.sensor.aarhus_precip_intensity.state | round(0) < 1 }}'
  action:
   - service: script.turn_on
     entity_id: script.irrigation

- alias: Air
####################
  trigger:
    platform: time
    minutes: 0
    seconds: 0
  condition:
    - condition: time
      after: "08:59:00"
      before: "16:01:00"
    - condition: state
      entity_id: group.personal_devices
      state: "not_home"
  action:
   - service: script.turn_on
     entity_id: script.garden_air

- alias: Garden light on
####################
  trigger:
    platform: time
    at: "07:00:00"
  action:
   - service: switch.turn_on
     entity_id: switch.garden_light
     
- alias: Garden light off
####################
  trigger:
    platform: time
    at: "21:00:00"
  action:
   - service: switch.turn_off
     entity_id: switch.garden_light

- alias: Weather light
####################
  trigger:
   - platform: state
     entity_id: sensor.aarhus_apparent_temperature
   - platform: state
     entity_id: sensor.aarhus_daily_max_precip_intensity

  action:
   - service: mqtt.publish
     data_template:
       topic: "light/clock1/rgb"
       payload_template: '{{ ((states.sensor.light_level.state | float() + 50.0)/100.0 * 64 * ((states.sensor.aarhus_daily_max_precip_intensity.state | float() > 0.3) | float())) | round(0) }},0,{{ ((states.sensor.light_level.state | float() + 50.0)/100.0 * 64 * ((states.sensor.aarhus_apparent_temperature.state | float() < 2.0) | float())) | round(0) }}'
       retain: "true"

- alias: Test to speech
####################
  trigger:
    platform: mqtt
    topic: "buttons/button_4/hold"
  condition:
    - condition: template
      value_template: '{{ trigger.payload | round(0) < 30 }}'
  action:
   - service: script.turn_on
     entity_id: script.weather_presentation

- alias: Christmas on (sunset)
####################
  trigger:
    platform: sun
    event: sunset
    offset: "-00:30:00"
    
  action:
   - service: mqtt.publish
     data:
       topic: "christmas-n/light/set"
       payload: "50"
       retain: "true"
   - service: mqtt.publish
     data:
       topic: "christmas-s/light/set"
       payload: "50"
       retain: "true"

- alias: Christmas dim (night)
####################
  trigger:
    platform: time
    at: "22:30:00"
    
  action:
   - service: mqtt.publish
     data:
       topic: "christmas-n/light/set"
       payload: "5"
       retain: "true"

   - service: mqtt.publish
     data:
       topic: "christmas-s/light/set"
       payload: "5"
       retain: "true"

- alias: Christmas dim (bed)
####################
  trigger:
    platform: state
    entity_id: input_boolean.in_bed
    from: 'off'
    to: 'on'
    for:
      seconds: 10
    
  condition:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'  
    
  action:
   - service: mqtt.publish
     data:
       topic: "christmas-n/light/set"
       payload: "5"
       retain: "true"

   - service: mqtt.publish
     data:
       topic: "christmas-s/light/set"
       payload: "5"
       retain: "true"

- alias: Christmas bright (morning)
####################
  trigger:
    platform: time
    at: "06:00:00"

  action:
   - service: mqtt.publish
     data:
       topic: "christmas-n/light/set"
       payload: "50"
       retain: "true"

   - service: mqtt.publish
     data:
       topic: "christmas-s/light/set"
       payload: "50"
       retain: "true"
       
- alias: Christmas off (sunrise)
####################
  trigger:
    platform: sun
    event: sunrise
    offset: "00:30:00"
    
  action:
   - service: mqtt.publish
     data:
       topic: "christmas-n/light/set"
       payload: "0"
       retain: "true"
   - service: mqtt.publish
     data:
       topic: "christmas-s/light/set"
       payload: "0"
       retain: "true"
